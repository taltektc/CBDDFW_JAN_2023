[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-02-19T20:01:23.003Z",
        "before": [
          {
            "result": {
              "duration": 5450042200,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeEachTest()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to login with valid email and password",
        "description": "",
        "id": "login-feature;user-should-be-able-to-login-with-valid-email-and-password",
        "after": [
          {
            "result": {
              "duration": 274300700,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "user in TalentTEK Homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTEKHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "user enter valid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 7,
            "name": "user enter valid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 8,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 9,
            "name": "user should be able to successfully login",
            "match": {
              "location": "stepDef.LoginSteps.userShouldBeAbleToSuccessfullyLogin()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@sanity"
          }
        ]
      },
      {
        "start_timestamp": "2023-02-19T20:01:28.766Z",
        "before": [
          {
            "result": {
              "duration": 1973800700,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeEachTest()"
            }
          }
        ],
        "line": 12,
        "name": "User should not be able to login with valid email and invalid password",
        "description": "",
        "id": "login-feature;user-should-not-be-able-to-login-with-valid-email-and-invalid-password",
        "after": [
          {
            "result": {
              "duration": 264245400,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 13,
            "name": "user in TalentTEK Homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTEKHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 14,
            "name": "user enter valid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "user enter invalid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1001600,
              "status": "passed"
            },
            "line": 16,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "user should be able see \"You have entered an incorrect email or student Id.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"You have entered an incorrect email or student Id.\"",
                  "offset": 24
                }
              ],
              "location": "stepDef.LoginSteps.userShouldBeAbleSee(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@smoke"
          },
          {
            "name": "@hb"
          }
        ]
      },
      {
        "start_timestamp": "2023-02-19T20:01:31.009Z",
        "before": [
          {
            "result": {
              "duration": 2093056500,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeEachTest()"
            }
          }
        ],
        "line": 19,
        "name": "User should not be able to login with invalid email and valid password",
        "description": "",
        "id": "login-feature;user-should-not-be-able-to-login-with-invalid-email-and-valid-password",
        "after": [
          {
            "result": {
              "duration": 244931200,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 20,
            "name": "user in TalentTEK Homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTEKHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 21,
            "name": "user enter invalid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 22,
            "name": "user enter valid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterValidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 23,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 24,
            "name": "user should be able see \"You have entered an incorrect email or student\"",
            "match": {
              "arguments": [
                {
                  "val": "\"You have entered an incorrect email or student\"",
                  "offset": 24
                }
              ],
              "location": "stepDef.LoginSteps.userShouldBeAbleSee(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2023-02-19T20:01:33.352Z",
        "before": [
          {
            "result": {
              "duration": 2405417200,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeEachTest()"
            }
          }
        ],
        "line": 26,
        "name": "User should not be able to login with invalid email and password",
        "description": "",
        "id": "login-feature;user-should-not-be-able-to-login-with-invalid-email-and-password",
        "after": [
          {
            "result": {
              "duration": 221077100,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "user in TalentTEK Homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTEKHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 28,
            "name": "user enter invalid email address",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidEmailAddress()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 29,
            "name": "user enter invalid password",
            "match": {
              "location": "stepDef.LoginSteps.userEnterInvalidPassword()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 30,
            "name": "user clicks on Log In button",
            "match": {
              "location": "stepDef.LoginSteps.userClicksOnLogInButton()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 31,
            "name": "user should be able see \"You have entered an incorrect email or student Id.\"",
            "match": {
              "arguments": [
                {
                  "val": "\"You have entered an incorrect email or student Id.\"",
                  "offset": 24
                }
              ],
              "location": "stepDef.LoginSteps.userShouldBeAbleSee(java.lang.String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Login Feature",
    "description": "",
    "id": "login-feature",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/login.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2023-02-19T20:01:35.982Z",
        "before": [
          {
            "result": {
              "duration": 2003779500,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.beforeEachTest()"
            }
          }
        ],
        "line": 4,
        "name": "User should be able to create a brand new email with unique email address",
        "description": "",
        "id": "signup-feature;user-should-be-able-to-create-a-brand-new-email-with-unique-email-address",
        "after": [
          {
            "result": {
              "duration": 241262000,
              "status": "passed"
            },
            "match": {
              "location": "stepDef.Hook.afterEachTest()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 5,
            "name": "user in TalentTEK Homepage",
            "match": {
              "location": "stepDef.LoginSteps.userInTalentTEKHomepage()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 6,
            "name": "when we click on the create new account button",
            "match": {
              "location": "stepDef.SignupSteps.whenWeClickOnTheCreateNewAccountButton()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@regression"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@sanity"
          }
        ]
      }
    ],
    "name": "Signup Feature",
    "description": "",
    "id": "signup-feature",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/signup.feature",
    "tags": []
  }
]